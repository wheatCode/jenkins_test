{"version":3,"sources":["pages/PasswordReset/PasswordReset.js"],"names":["useStyles","makeStyles","theme","paper","width","marginLeft","spacing","marginRight","breakpoints","up","avatar","margin","height","color","palette","secondary","main","form","marginTop","submit","container","display","flexDirection","alignItems","justifyContent","PasswordReset","classes","intl","useIntl","history","useHistory","useState","username","setUsername","pageTitle","formatMessage","id","defaultMessage","onBackClick","goBack","className","elevation","component","variant","onSubmit","event","preventDefault","replace","noValidate","value","onInput","e","target","required","fullWidth","label","name","autoComplete","autoFocus","type"],"mappings":"gOAUMA,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,OAAK,GACHC,MAAO,OACPC,WAAYH,EAAMI,QAAQ,GAC1BC,YAAaL,EAAMI,QAAQ,IAHxB,cAIFJ,EAAMM,YAAYC,GAAG,IAAMP,EAAMI,QAAQ,IAAM,CAC9CF,MAAO,IACPC,WAAY,OACZE,YAAa,SAPZ,0BASQL,EAAMI,QAAQ,IATtB,wBAUM,QAVN,8BAWY,UAXZ,2BAYS,UAZT,kCAaSJ,EAAMI,QAAQ,GAbvB,cAa+BJ,EAAMI,QAAQ,GAb7C,cAaqDJ,EAAMI,QAC5D,GAdC,UAiBLI,OAAQ,CACNC,OAAQT,EAAMI,QAAQ,GACtBF,MAAO,IACPQ,OAAQ,IACRC,MAAOX,EAAMY,QAAQC,UAAUC,MAEjCC,KAAM,CACJC,UAAWhB,EAAMI,QAAQ,IAE3Ba,OAAQ,CACNR,OAAQT,EAAMI,QAAQ,EAAG,EAAG,IAE9Bc,UAAW,CACTC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBZ,OAAO,YAqEIa,UAjEO,WACpB,IAAMC,EAAU1B,IACV2B,EAAOC,cACPC,EAAUC,cAHU,EAIMC,mBAAS,IAJf,mBAInBC,EAJmB,KAITC,EAJS,KAU1B,OACE,cAAC,IAAD,CACEC,UAAWP,EAAKQ,cAAc,CAC5BC,GAAI,iBACJC,eAAgB,mBAElBC,YAAa,WACXT,EAAQU,UANZ,SASE,cAAC,IAAD,CAAOC,UAAWd,EAAQvB,MAAOsC,UAAW,EAA5C,SACE,sBAAKD,UAAWd,EAAQN,UAAxB,UACE,cAAC,IAAD,CAAYsB,UAAU,KAAKC,QAAQ,KAAnC,SACGhB,EAAKQ,cAAc,CAClBC,GAAI,iBACJC,eAAgB,qBAGpB,uBAAMG,UAAWd,EAAQT,KAAM2B,SAvBvC,SAAsBC,GACpBA,EAAMC,iBACNjB,EAAQkB,QAAQ,YAqB6CC,YAAU,EAAjE,UACE,cAAC,IAAD,CACEC,MAAOjB,EACPkB,QAAS,SAACC,GAAD,OAAOlB,EAAYkB,EAAEC,OAAOH,QACrCN,QAAQ,WACRhC,OAAO,SACP0C,UAAQ,EACRC,WAAS,EACTlB,GAAG,QACHmB,MAAO5B,EAAKQ,cAAc,CACxBC,GAAI,QACJC,eAAgB,WAElBmB,KAAK,QACLC,aAAa,QACbC,WAAS,IAGX,cAAC,IAAD,CACEC,KAAK,SACLL,WAAS,EACTX,QAAQ,YACR9B,MAAM,UACN2B,UAAWd,EAAQP,OALrB,SAOGQ,EAAKQ,cAAc,CAClBC,GAAI,iBACJC,eAAgB","file":"static/js/36.005e4746.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button'\nimport Page from 'material-ui-shell/lib/containers/Page'\nimport Paper from '@material-ui/core/Paper'\nimport React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useHistory } from 'react-router-dom'\nimport { useIntl } from 'react-intl'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: 'auto',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(620 + theme.spacing(6))]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n      3\n    )}px`,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    width: 192,\n    height: 192,\n    color: theme.palette.secondary.main,\n  },\n  form: {\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: `100%`,\n  },\n}))\n\nconst PasswordReset = () => {\n  const classes = useStyles()\n  const intl = useIntl()\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n  function handleSubmit(event) {\n    event.preventDefault()\n    history.replace('/signin')\n  }\n\n  return (\n    <Page\n      pageTitle={intl.formatMessage({\n        id: 'password_reset',\n        defaultMessage: 'Password reset',\n      })}\n      onBackClick={() => {\n        history.goBack()\n      }}\n    >\n      <Paper className={classes.paper} elevation={6}>\n        <div className={classes.container}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {intl.formatMessage({\n              id: 'password_reset',\n              defaultMessage: 'Password reset',\n            })}\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\n            <TextField\n              value={username}\n              onInput={(e) => setUsername(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label={intl.formatMessage({\n                id: 'email',\n                defaultMessage: 'E-Mail',\n              })}\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              {intl.formatMessage({\n                id: 'password_reset',\n                defaultMessage: 'Reset Password',\n              })}\n            </Button>\n          </form>\n        </div>\n      </Paper>\n    </Page>\n  )\n}\n\nexport default PasswordReset\n"],"sourceRoot":""}