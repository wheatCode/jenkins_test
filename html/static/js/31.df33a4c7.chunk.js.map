{"version":3,"sources":["pages/HikingFrontend/Register0_1.js"],"names":["useStyles","makeStyles","theme","form","width","FormControl","margin","spacing","container","height","padding","backgroundColor","Title","fontFamily","fontSize","fontweight","fontStretch","fontStyle","lineheight","letterspacing","color","Text","fontWeight","lineHeight","letterSpacing","InputBackground","borderColor","PhoneRegionBackground","PhoneNumberBackground","submit","ModifyTextFieldColor","usePlaceholderStyles","placeholder","SignIn","classes","React","useState","name","setName","gender","setGender","phoneRegion","setPhoneRegion","phoneNumeber","setPhoneNumeber","selectedDate","setSelectedDate","inputValue","setInputValue","live","setLive","handleSubmit","useForm","history","useHistory","Placeholder","children","className","testOuputObj","phone_number","phone_region","birth","headers","localStorage","getItem","console","log","responsedJson","axios","require","onSubmit","data","a","post","then","response","catch","error","finally","push","fullWidth","onChange","event","target","value","displayEmpty","renderValue","undefined","utils","DateFnsUtils","disableToolbar","variant","format","invalidDateMessage","id","date","KeyboardButtonProps","type"],"mappings":"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","file":"static/js/31.df33a4c7.chunk.js","sourcesContent":["import React, { useEffect ,useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input'\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Page from 'material-ui-shell/lib/containers/Page';\nimport FormControl from '@material-ui/core/FormControl';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport axios from \"axios\";\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%', // Fix IE 11 issue.\n    },\n    FormControl:{\n        margin: theme.spacing(1),\n        width: '-webkit-fill-available',\n    },\n    container: {\n        width: '-webkit-fill-available',\n        height: 768,\n        padding: '40px 16px 213px',\n        backgroundColor: '#ffffff'\n      \n      //backgroundColor:'#66CBBA'\n    },\n    Title: {\n        width: '-webkit-fill-available',\n        height: '36',\n        margin: '0 232px 31px 0',\n        fontFamily: \"NotoSansCJKtc\",\n        fontSize: '24px',\n        fontweight: '500',\n        fontStretch: 'normal',\n        fontStyle: 'normal',\n        lineheight: '1.5',\n        letterspacing: '0.5px',\n        color: '#232323'\n    },\n    Text:{\n        width: '33',\n        height:'24',\n        margin: '0 0 1px 0',\n        fontSize: '16px',\n        fontWeight: '500',\n        fontStretch: 'normal',\n        fontStyle: 'normal',\n        lineHeight: '1.5',\n        letterSpacing: '0.5px',\n        color: '#232323',\n    },\n    InputBackground:{\n        width: '-webkit-fill-available',\n        height: '40',\n        margin: '8px 0 31px 0',\n        borderColor:'#232323',\n    },\n    PhoneRegionBackground:{\n        width: '123px',\n        height: '40',\n        margin: '8px 0 31px 0',//not correct position\n        padding: '8px 0 0',\n    },\n    PhoneNumberBackground:{\n        width: 'auto',\n        //fullWidth:true,\n        height: '40',\n        margin: '-12px 0 0px 40px',//first value need to fix\n        padding: '8px 0 0',\n    },\n    submit: {\n        width: '-webkit-fill-available',\n        height: '48px',\n        margin: '40px 0px 0px 0px',\n        backgroundColor: '#00d04c',\n        color: '#ffffff',\n    },\n    ModifyTextFieldColor: {\n        // Theme Color, or use css color in quote\n        fontSize: '14px',\n        color: '#979797',  \n        borderColor:'#979797'\n      },\n  }));\n  const usePlaceholderStyles = makeStyles(theme => ({\n    placeholder: {\n      color: \"#aaa\"\n    }\n  }));\n  ;\n\n  export default function SignIn() {\n    const classes = useStyles();\n    const [name, setName] = React.useState('');\n    const [gender, setGender] = React.useState('');\n    const [phoneRegion, setPhoneRegion] = React.useState('');\n    const [phoneNumeber, setPhoneNumeber] = React.useState('');\n    const [selectedDate, setSelectedDate] = React.useState('');\n    const [inputValue, setInputValue] = useState();\n    const [live, setLive] = React.useState('');\n    const { handleSubmit } = useForm()\n    const history = useHistory();\n\n    const handleChange = (event) => {\n      setGender(event.target.value);\n    };\n    const handlePhoneRegion = (event) => {\n      setPhoneRegion(event.target.value);\n    };\n    const handleLiveChange = (event) => {\n      setLive(event.target.value);\n    };\n    const handleDateChange = (date, value) => {\n      setSelectedDate(date);\n      setInputValue(value);\n    };\n    \n    const Placeholder = ({ children }) => {\n      const classes = usePlaceholderStyles();\n      return <div className={classes.placeholder}>{children}</div>;\n    };\n\n    let testOuputObj = {\n      name: name,\n      gender: gender,\n      phone_number: phoneNumeber,\n      phone_region: phoneRegion,\n      birth: inputValue,\n      live: live\n    }\n    const headers = {\n      'Authorization': 'Bearer '+localStorage.getItem('token')\n    }\n    console.log(headers);\n    const axios = require('axios');\n    let responsedJson; // 將回傳的JSON先定義為變數，後面再賦值\n    const onSubmit = async(data) => {\n      data = testOuputObj;\n      console.log(data);\n      console.log(headers);\n      await axios.post('https://gohiking-server.herokuapp.com/api/profile', data, { headers })\n      .then(function (response) {\n        console.log('correct');\n        responsedJson = response.data;\n      })\n      .catch(function (error) {\n        console.log('error');\n        responsedJson = error.response.data;\n      })\n      .finally(function () {\n        console.log(responsedJson);\n        history.push('/signin');\n      }); \n    }\n\n    return (\n        <div className={classes.container}>\n          <Typography className={classes.Title } >\n            建立個人資料\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Typography className={classes.Text}>\n            姓名 \n          </Typography>\n          <Input \n          className={classes.InputBackground} \n          placeholder=\"請輸入您的名稱\" \n          fullWidth \n          onChange={event => setName(event.target.value)}//Get value in Email\n          />\n          <Typography className={classes.Text} >\n            性別\n          </Typography>  \n          <Select\n          className={classes.InputBackground}\n          value={gender}\n          displayEmpty\n          renderValue={\n            gender !== \"\" ? undefined : () => <Placeholder>請輸入您的性別</Placeholder>\n          }\n          onChange={handleChange}\n          >   \n            <MenuItem value={'男'}>男</MenuItem>\n            <MenuItem value={'女'}>女</MenuItem>\n          </Select>\n          <Typography className={classes.Text} >\n            手機\n          </Typography>\n          <div>\n          <Select\n          className={classes.PhoneRegionBackground}\n          value={phoneRegion}\n          displayEmpty\n          renderValue={\n            phoneRegion !== \"\" ? undefined : () => <Placeholder>台灣+886</Placeholder>\n          }\n          onChange={handlePhoneRegion}\n          >   \n            <MenuItem value={886}>台灣+886</MenuItem>\n            <MenuItem value={852}>香港+852</MenuItem>\n          </Select>\n          <Input \n          className={classes.PhoneNumberBackground} \n          placeholder=\"請輸您的手機號碼\"  \n          onChange={event => setPhoneNumeber(event.target.value)}//Get value in Email\n          fullWidth/>\n          </div>\n          <Typography className={classes.Text} >\n            生日\n          </Typography>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardDatePicker\n            placeholder=\"請選擇\"\n            className={classes.InputBackground}\n            disableToolbar\n            variant=\"inline\"\n            format=\"yyyy/MM/dd\"\n            margin=\"normal\"\n            invalidDateMessage=''\n            id=\"date-picker-inline\"\n            value={selectedDate}\n            inputValue={inputValue}\n            onChange={handleDateChange}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n          </MuiPickersUtilsProvider>\n          <Typography className={classes.Text} >\n            居住地\n          </Typography>\n          <Select\n          className={classes.InputBackground}\n          value={live}\n          displayEmpty\n          renderValue={\n            live !== \"\" ? undefined : () => <Placeholder>請選擇</Placeholder>\n          }\n          onChange={handleLiveChange}\n          >   \n            <MenuItem value={\"Taipei\"}>台北市</MenuItem>\n            <MenuItem value={\"Taichung\"}>台中市</MenuItem>\n          </Select>\n          <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n            >\n            同意並註冊\n          </Button>\n        </form>\n      </div>\n    );\n  }"],"sourceRoot":""}