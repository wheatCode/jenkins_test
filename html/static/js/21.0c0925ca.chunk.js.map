{"version":3,"sources":["../node_modules/@material-ui/icons/Edit.js","pages/PersonalPage/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","createMuiTheme","palette","type","primary","main","makeStyles","theme","root","flexGrow","top_bar_bg_color","backgroundColor","height","textfield_container","marginTop","background","title","marginLeft","avatar","width","gridMargin","textfield","marginBottom","paddingLeft","textfield_phone","textLabel","finishButton","padding","avatarOverlay","position","bottom","textAlign","verticalAlign","lineHeight","color","fontSize","opacity","avatarContainer","borderRadius","margin","zIndex","overflow","backdrop","drawer","PersonalPage","props","history","useHistory","Logix","PersonalPageLogic","croppedImage","undefined","location","state","search","name","Error","AvatarUploadDialogLogic","isOpen","closeDialog","openDialog","inputRef","triggerImageInput","classes","className","AppBar","style","Toolbar","IconButton","edge","menuButton","aria-label","Typography","variant","onClick","push","pathname","pData","personalInfo","Grid","container","direction","alignItems","justify","item","xs","spacing","Avatar","src","image","email","Divider","TextField","id","placeholder","inputProps","readOnly","gender","Select","labelId","countryInfo","map","info","MenuItem","phoneCode","countryCode","countryName","phone_number","InputLabelProps","shrink","birth","county","AvatarUploadDialog","Backdrop","open","isLoading","loading","size"],"mappings":"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","file":"static/js/21.0c0925ca.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n  withStyles\n} from \"@material-ui/core/styles\";\nimport {\n  Avatar,\n  Backdrop,\n  Button,\n  Dialog,\n  Divider,\n  Grid,\n  InputLabel,\n  MenuItem\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AvatarUploadDialog from \"components/Dialog/AvatarUploadDialog\";\nimport AvatarUploadDialogLogic from \"components/Dialog/AvatarUploadDialogLogic\";\nimport Select from \"@material-ui/core/Select\";\nimport { countryInfo } from \"../../data/countryInfo\";\nimport PersonalPageLogic from \"./personalPageLogic\";\nimport { useHistory } from \"react-router\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst lightTheme = createMuiTheme({\n  palette: {\n    type: \"light\",\n    primary: {\n      main: \"#00d04c\"\n    }\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  top_bar_bg_color: {\n    backgroundColor: \"#3c5754\",\n    height: 56\n  },\n  textfield_container: {\n    marginTop: 15,\n    background: \"white\"\n  },\n  title: {\n    flexGrow: 1,\n    marginLeft: 32\n  },\n  avatar: {\n    width: 96,\n    height: 96\n  },\n  gridMargin: {\n    marginTop: 32\n  },\n  textfield: {\n    marginTop: 8,\n    marginBottom: 8,\n    paddingLeft: 24,\n    flexGrow: 1,\n    width: \"100%\"\n  },\n  textfield_phone: {\n    marginTop: 8,\n    marginBottom: 8,\n    flexGrow: 1,\n    width: \"100%\"\n  },\n  textLabel: {\n    paddingLeft: 15\n  },\n  finishButton: {\n    padding: 0,\n    paddingLeft: 40\n  },\n  avatarOverlay: {\n    position: \"absolute\",\n    bottom: 0,\n    height: \"20%\",\n    width: \"100%\",\n    backgroundColor: \"black\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    lineHeight: \"150%\",\n    color: \"white\",\n    fontSize: 12,\n    opacity: \"80%\"\n  },\n  avatarContainer: {\n    background: \"yellow\",\n    width: 96,\n    height: 96,\n    position: \"relative\",\n    borderRadius: \"50% 50%\",\n    margin: 0,\n    padding: 0,\n    zIndex: 100,\n    overflow: \"hidden\"\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\"\n  }\n}));\n\nfunction PersonalPage(props) {\n  const history = useHistory();\n\n  const Logix = PersonalPageLogic();\n  const croppedImage =\n    props.location.state === undefined\n      ? null\n      : props.location.state.croppedImage;\n  if (croppedImage) {\n    props.location.state.croppedImage = null;\n    if (croppedImage.search(\"blob:\") == -1) {\n      croppedImage = null;\n    }\n  }\n  const {\n    isOpen,\n    openDialog,\n    closeDialog,\n    inputRef,\n    triggerImageInput\n  } = AvatarUploadDialogLogic();\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={{ background: \"#3c5754\" }}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            個人檔案\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            edge=\"end\"\n            onClick={() => {\n              history.push({\n                pathname: \"/editAccount\",\n                state: { pData: Logix.personalInfo }\n              });\n            }}\n          >\n            <EditIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"flex-start\"\n        className={classes.gridMargin}\n      >\n        <Grid\n          item\n          xs={12}\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"flex-start\"\n          spacing={2}\n        >\n          <Grid item xs={12}>\n            <div className={classes.avatarContainer}>\n              <Avatar\n                // alt=\"Profile Picture\"\n                src={\n                  croppedImage == null ? Logix.personalInfo.image : croppedImage\n                }\n                className={classes.avatar}\n              />\n              {/* {isReadonly ? (\n                <></>\n              ) : (\n                <div\n                  class={classes.avatarOverlay}\n                  onClick={() => {\n                    openDialog();\n                  }}\n                >\n                  更換\n                </div>\n              )} */}\n            </div>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"flex-start\"\n            spacing={0.5}\n          >\n            {true ? (\n              <>\n                <Grid item xs={12}>\n                  <Typography variant=\"h6\" style={{ color: \"#232323\" }}>\n                    {Logix.personalInfo.name\n                      ? Logix.personalInfo.name\n                      : \"loading\"}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"h7\" style={{ color: \"#919191\" }}>\n                    {Logix.personalInfo.email\n                      ? Logix.personalInfo.email\n                      : \"loading\"}\n                  </Typography>\n                </Grid>\n              </>\n            ) : (\n              <>\n                <Grid item xs={12}>\n                  <Typography variant=\"h7\" style={{ color: \"#919191\" }}>\n                    {Logix.personalInfo.email\n                      ? Logix.personalInfo.email\n                      : \"loading\"}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <div style={{ height: 32 }} />\n                </Grid>\n              </>\n            )}\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"flex-start\"\n        >\n          <Grid\n            item\n            xs={12}\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justify=\"flex-start\"\n            className={classes.textfield_container}\n            spacing={0}\n          >\n            <Grid item xs={12}>\n              <Divider />\n            </Grid>\n            <Grid item xs={3}>\n              <Typography variant=\"body1\" className={classes.textLabel}>\n                姓名\n              </Typography>\n            </Grid>\n            <Grid item xs={9}>\n              <TextField\n                id=\"standard-basic\"\n                placeholder=\"姓名\"\n                className={classes.textfield}\n                inputProps={{\n                  value: Logix.personalInfo.name,\n                  readOnly: true\n                }}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Typography variant=\"body1\" className={classes.textLabel}>\n                性別\n              </Typography>\n            </Grid>\n            <Grid item xs={9}>\n              <TextField\n                id=\"standard-basic\"\n                placeholder=\"性別\"\n                className={classes.textfield}\n                inputProps={{\n                  value: Logix.personalInfo.gender,\n                  readOnly: true\n                }}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Typography variant=\"body1\" className={classes.textLabel}>\n                國碼\n              </Typography>\n            </Grid>\n            <Grid item xs={9}>\n              <div className={classes.textfield}>\n                <Select\n                  labelId=\"country-code\"\n                  id=\"country-code\"\n                  style={{ width: \"30%\" }}\n                  className={classes.textfield}\n                  inputProps={{\n                    readOnly: true\n                  }}\n                >\n                  {countryInfo.map(info => (\n                    <MenuItem\n                      key={info.countryCode + info.countryName}\n                      value={info.phoneCode}\n                    >\n                      {info.phoneCode}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <TextField\n                  id=\"standard-basic\"\n                  placeholder=\"手機\"\n                  style={{ width: \"70%\" }}\n                  className={classes.textfield_phone}\n                  inputProps={{\n                    value: Logix.personalInfo.phone_number,\n                    readOnly: true\n                  }}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={3}>\n              <Typography variant=\"body1\" className={classes.textLabel}>\n                生日\n              </Typography>\n            </Grid>\n            <Grid item xs={9}>\n              <TextField\n                id=\"standard-basic\"\n                placeholder=\"生日\"\n                className={classes.textfield}\n                type=\"date\"\n                InputLabelProps={{\n                  shrink: true\n                }}\n                inputProps={{\n                  value: Logix.personalInfo.birth,\n                  readOnly: true\n                }}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Typography variant=\"body1\" className={classes.textLabel}>\n                居住地\n              </Typography>\n            </Grid>\n            <Grid item xs={9}>\n              <TextField\n                id=\"standard-basic\"\n                placeholder=\"居住地\"\n                className={classes.textfield}\n                inputProps={{\n                  value: Logix.personalInfo.county\n                    ? Logix.personalInfo.county.name\n                    : \"\",\n                  readOnly: true\n                }}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <AvatarUploadDialog\n        isOpen={isOpen}\n        triggerImageInput={triggerImageInput}\n        closeDialog={closeDialog}\n        inputRef={inputRef}\n      />\n      <Backdrop className={classes.backdrop} open={Logix.isLoading}>\n        <ClipLoader color={\"#36CAAD\"} loading={Logix.isLoading} size={150} />\n      </Backdrop>\n    </div>\n  );\n}\n\nexport default PersonalPage;\n","export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}"],"sourceRoot":""}