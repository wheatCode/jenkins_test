{"version":3,"sources":["pages/ListPageDemo/index.js"],"names":["fields","name","label","type","Row","index","style","data","amount","registered","email","alignItems","primary","secondary","Fragment","component","variant","color","ListPageDemo","intl","useIntl","list","listProps","itemSize","getPageProps","pageTitle","formatMessage","id","defaultMessage","count","length"],"mappings":"2z6SAAA,+FAYMA,EAAS,CACb,CACEC,KAAM,OACNC,MAAO,QAET,CACED,KAAM,QACNC,MAAO,UAET,CACED,KAAM,SACNC,MAAO,SACPC,KAAM,UAER,CACEF,KAAM,WACNC,MAAO,SACPC,KAAM,QAER,CACEF,KAAM,aACNC,MAAO,aACPC,KAAM,QAER,CACEF,KAAM,mBACNC,MAAO,oBACPC,KAAM,SAIJC,EAAM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACnBN,EAAyCM,EAAzCN,KAD8B,EACWM,EAAnCC,cADwB,MACf,GADe,EACXC,EAAsBF,EAAtBE,WAAYC,EAAUH,EAAVG,MAEvC,OACE,sBAA8BJ,MAAOA,EAArC,UACE,cAAC,IAAD,CAAUK,WAAW,aAArB,SACE,cAAC,IAAD,CACEC,QAAO,UAAKX,EAAL,YAAaI,GACpBQ,UACE,eAAC,IAAMC,SAAP,WACE,cAAC,IAAD,CACEC,UAAU,OACVC,QAAQ,QACRC,MAAM,gBAHR,SAKGP,IAEH,uBACA,cAAC,IAAD,CACEK,UAAU,OACVC,QAAQ,QACRC,MAAM,gBAHR,mBAKMT,EALN,YAKgBC,YAMxB,cAAC,IAAD,MAzBF,UAAaR,EAAb,YAAqBI,KAsDVa,UAxBM,WACnB,IAAMC,EAAOC,cAEb,OACE,cAAC,WAAD,CACEnB,KAAK,YACLoB,KAAMA,EACNrB,OAAQA,EACRI,IAAKA,EACLkB,UAAW,CAAEC,SAAU,IACvBC,aAAc,SAACH,GACb,MAAO,CACLI,UAAWN,EAAKO,cACd,CACEC,GAAI,iBACJC,eAAgB,oCAElB,CAAEC,MAAOR,EAAKS","file":"static/js/20.17d4aa82.chunk.js","sourcesContent":["import React from 'react'\nimport { ListPage } from 'material-ui-shell/lib/containers/Page'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport { useIntl } from 'react-intl'\n\nimport list from './data.json'\nimport { IconButton } from '@material-ui/core'\nimport { Add } from '@material-ui/icons'\n\nconst fields = [\n  {\n    name: 'name',\n    label: 'Name',\n  },\n  {\n    name: 'email',\n    label: 'E-Mail',\n  },\n  {\n    name: 'amount',\n    label: 'Amount',\n    type: 'number',\n  },\n  {\n    name: 'isActive',\n    label: 'Active',\n    type: 'bool',\n  },\n  {\n    name: 'registered',\n    label: 'Registered',\n    type: 'date',\n  },\n  {\n    name: 'registrationTime',\n    label: 'Registration time',\n    type: 'time',\n  },\n]\n\nconst Row = ({ index, style, data }) => {\n  const { name, amount = '', registered, email } = data\n\n  return (\n    <div key={`${name}_${index}`} style={style}>\n      <ListItem alignItems=\"flex-start\">\n        <ListItemText\n          primary={`${name} ${index}`}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {email}\n              </Typography>\n              <br />\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {`${amount} ${registered}`}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n      <Divider />\n    </div>\n  )\n}\n\nconst ListPageDemo = () => {\n  const intl = useIntl()\n\n  return (\n    <ListPage\n      name=\"list_demo\"\n      list={list}\n      fields={fields}\n      Row={Row}\n      listProps={{ itemSize: 91 }}\n      getPageProps={(list) => {\n        return {\n          pageTitle: intl.formatMessage(\n            {\n              id: 'list_page_demo',\n              defaultMessage: 'List Page demo with {count} rows',\n            },\n            { count: list.length }\n          ),\n        }\n      }}\n    />\n  )\n}\nexport default ListPageDemo\n"],"sourceRoot":""}